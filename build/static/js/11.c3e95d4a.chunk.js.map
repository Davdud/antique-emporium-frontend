{"version":3,"sources":["components/Shop/Shop.js","config/config.js"],"names":["useStyles","makeStyles","root","width","Shop","useState","Products","setProducts","Skip","Limit","classes","dataReturn","useEffect","getProducts","skip","limit","variables","fetch","URL","method","headers","then","res","json","data","console","log","catch","error","renderCards","map","product","index","Date","date","toLocaleDateString","className","alt","_id","src","imageUrl","effect","gutterBottom","variant","component","name","once","color","description","href","length","style","display","height","justifyContent","alignItems"],"mappings":"wSAmBMA,EAAYC,YAAW,CACzBC,KAAM,CACJC,MAAO,OA+FEC,UAzFf,WAAiB,IAAD,EACoBC,mBAAS,IAD7B,mBACLC,EADK,KACKC,EADL,OAEYF,mBAAS,GAFrB,mBAELG,EAFK,aAGcH,mBAAS,IAHvB,mBAGLI,EAHK,KAINC,GAJM,KAIIV,KAEZW,EAAa,GAErBC,qBAAU,WAKFC,EAJkB,CACdC,KAAMN,EACNO,MAAON,MAGhB,IAEC,IAAMI,EAAc,SAACG,GACjBC,MAAMC,IAAI,gBAAiB,CACvBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,qBAEfJ,GAAWK,MAAK,SAASC,GACxB,OAAOA,EAAIC,UACZF,MAAK,SAASG,GACbb,EAAaa,EACbC,QAAQC,IAAIf,GACZJ,EAAYiB,MACbG,OAAM,SAASC,GACdH,QAAQG,MAAMA,OAIhBC,EAAcvB,EAASwB,KAAI,SAACC,EAASC,GAC5B,IAAIC,KAAKF,EAAQG,MACTC,qBAEnB,OAAO,qBAAiBC,UAAU,OAA3B,SACH,mCACJ,eAAC,IAAD,CAAMA,UAAW1B,EAAQR,KAAzB,UACA,eAAC,IAAD,WACA,cAAC,gBAAD,CACYmC,IAAG,UAAKN,EAAQO,KAChBC,IAAG,UAAKR,EAAQS,UAChBrC,MAAO,IACPsC,OAAO,SACnB,eAAC,IAAD,WACI,cAAC,IAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACCb,EAAQc,OAET,cAAC,IAAD,CAAUC,MAAM,EAAhB,SACA,cAAC,IAAD,CAAYH,QAAQ,QAAQI,MAAM,gBAAgBH,UAAU,IAA5D,SACCb,EAAQiB,sBAKb,cAAC,IAAD,UACA,cAAC,IAAD,CAAQL,QAAQ,YAAYI,MAAM,UAAUE,KAAI,+CAA0ClB,EAAQO,KAAlG,sBAnBoCP,EAAQO,QAF3BN,MA8BrB,OACG,sBAAKI,UAAU,gBAAf,UACI,sCACqB,IAApB9B,EAAS4C,OACL,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAASC,eAAgB,SAAUC,WAAY,UAAtF,SACI,8CAEJ,8BACI,sBAAKnB,UAAU,YAAf,UACK9B,EAASwB,KAAI,SAACC,EAASC,OACvBH,OAIb,uBAAM,uBACF,qBAAKsB,MAAO,CAAEC,QAAS,OAAQE,eAAgB,iB,gCC9GhDpC,QAAM","file":"static/js/11.c3e95d4a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport URL from '../../config/config'\n\n//Lazy Load\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport LazyLoad from 'react-lazyload';\n\n//Material Ui\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Shop.css'\n\nconst useStyles = makeStyles({\n    root: {\n      width: 320,\n    },\n  });\n  \n  const productionURL = 'http://localhost:5000/'\n\nfunction Shop() {\n    const [Products, setProducts] = useState([])\n    const [Skip, setSkip] = useState(0)\n    const [Limit, setLimit] = useState(4)\n    const classes = useStyles();\n    const onlyAlphanumericRegex = /[^a-z0-9]/gi;\n    let dataReturn = [];\n\nuseEffect(() => {\n        const variables = {\n            skip: Skip,\n            limit: Limit\n        }\n        getProducts(variables);\n}, [])\n\n    const getProducts = (variables) => {\n        fetch(URL+'/api/products', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n        }, variables).then(function(res) {\n            return res.json()\n        }).then(function(data) {\n            dataReturn = data;\n            console.log(dataReturn)\n            setProducts(data)\n        }).catch(function(error) {\n            console.error(error)\n        })\n    }\n\n    const renderCards = Products.map((product, index) => {\n        var date = new Date(product.date);\n        var newDate = date.toLocaleDateString()\n\n        return <div key={index} className=\"item\">\n            <>\n        <Card className={classes.root} key={product._id}>\n        <CardActionArea>\n        <LazyLoadImage\n                    alt={`${product._id}`}\n                    src={`${product.imageUrl}`}\n                    width={200}\n                    effect=\"blur\" />\n        <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {product.name}\n            </Typography>\n            <LazyLoad once={true} >\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {product.description}\n            </Typography>\n            </LazyLoad>\n        </CardContent>\n        </CardActionArea>\n        <CardActions>\n        <Button variant=\"contained\" color=\"primary\" href={`https://antique-emporium.netlify.app/${product._id}`}>\n            View\n        </Button>\n        </CardActions>\n        </Card>\n        </>\n        </div>\n    })\n\n    return (\n       <div className=\"shopping-page\">\n           <h1>Shop</h1>\n           {Products.length === 0 ?\n                <div style={{ display: 'flex', height: '300px', justifyContent: 'center', alignItems: 'center' }}>\n                    <h2>Loading...</h2>\n                </div> :\n                <div>\n                    <div className=\"container\">\n                        {Products.map((product, index) => {})}\n                        {renderCards}\n                        </div>\n                </div>\n            }\n            <br /><br />\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                </div>\n       </div>\n    )\n}\n\nexport default Shop;","export default URL = 'https://antique-emporium-backend.herokuapp.com'"],"sourceRoot":""}